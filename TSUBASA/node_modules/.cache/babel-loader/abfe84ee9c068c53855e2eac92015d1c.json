{"ast":null,"code":"import { createElement } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getDirectionStyle = function getDirectionStyle(dir, size) {\n  switch (dir) {\n    case 'left':\n      return {\n        top: 0,\n        left: 0,\n        transform: 'translate3d(-100%, 0, 0)',\n        width: size,\n        height: '100vh'\n      };\n\n    case 'right':\n      return {\n        top: 0,\n        right: 0,\n        transform: 'translate3d(100%, 0, 0)',\n        width: size,\n        height: '100vh'\n      };\n\n    case 'bottom':\n      return {\n        left: 0,\n        right: 0,\n        bottom: 0,\n        transform: 'translate3d(0, 100%, 0)',\n        width: '100%',\n        height: size\n      };\n\n    case 'top':\n      return {\n        left: 0,\n        right: 0,\n        top: 0,\n        transform: 'translate3d(0, -100%, 0)',\n        width: '100%',\n        height: size\n      };\n\n    default:\n      return {};\n  }\n};\n\nvar EZDrawer = function EZDrawer(_ref) {\n  var open = _ref.open,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n      children = _ref.children,\n      style = _ref.style,\n      _ref$enableOverlay = _ref.enableOverlay,\n      enableOverlay = _ref$enableOverlay === void 0 ? true : _ref$enableOverlay,\n      _ref$overlayColor = _ref.overlayColor,\n      overlayColor = _ref$overlayColor === void 0 ? '#000' : _ref$overlayColor,\n      _ref$overlayOpacity = _ref.overlayOpacity,\n      overlayOpacity = _ref$overlayOpacity === void 0 ? 0.4 : _ref$overlayOpacity,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 100 : _ref$zIndex,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 500 : _ref$duration,\n      direction = _ref.direction,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 250 : _ref$size,\n      className = _ref.className;\n  var idSuffix = (Math.random() + 1).toString(36).substring(7);\n  var overlayStyles = {\n    backgroundColor: \"\" + overlayColor,\n    opacity: \"\" + overlayOpacity,\n    zIndex: zIndex\n  };\n\n  var drawerStyles = _extends({\n    zIndex: zIndex + 1,\n    transitionDuration: duration + \"ms\"\n  }, getDirectionStyle(direction, size), style);\n\n  return createElement(\"div\", {\n    id: 'EZDrawer' + idSuffix,\n    className: 'EZDrawer'\n  }, createElement(\"input\", {\n    type: 'checkbox',\n    id: 'EZDrawer__checkbox' + idSuffix,\n    className: 'EZDrawer__checkbox',\n    onChange: onClose,\n    checked: open\n  }), createElement(\"nav\", {\n    role: 'navigation',\n    id: 'EZDrawer__container' + idSuffix,\n    style: drawerStyles,\n    className: 'EZDrawer__container ' + className\n  }, children), enableOverlay && createElement(\"label\", {\n    htmlFor: 'EZDrawer__checkbox' + idSuffix,\n    id: 'EZDrawer__overlay' + idSuffix,\n    className: 'EZDrawer__overlay',\n    style: overlayStyles\n  }));\n};\n\nexport default EZDrawer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CACtBC,GADsB,EAEtBC,IAFsB;AAItB,UAAQD,GAAR;AACI,SAAK,MAAL;AACI,aAAO;AACHE,WAAG,EAAE,CADF;AAEHC,YAAI,EAAE,CAFH;AAGHC,iBAAS,EAAE,0BAHR;AAIHC,aAAK,EAAEJ,IAJJ;AAKHK,cAAM,EAAE;AALL,OAAP;;AAOJ,SAAK,OAAL;AACI,aAAO;AACHJ,WAAG,EAAE,CADF;AAEHK,aAAK,EAAE,CAFJ;AAGHH,iBAAS,EAAE,yBAHR;AAIHC,aAAK,EAAEJ,IAJJ;AAKHK,cAAM,EAAE;AALL,OAAP;;AAOJ,SAAK,QAAL;AACI,aAAO;AACHH,YAAI,EAAE,CADH;AAEHI,aAAK,EAAE,CAFJ;AAGHC,cAAM,EAAE,CAHL;AAIHJ,iBAAS,EAAE,yBAJR;AAKHC,aAAK,EAAE,MALJ;AAMHC,cAAM,EAAEL;AANL,OAAP;;AAQJ,SAAK,KAAL;AACI,aAAO;AACHE,YAAI,EAAE,CADH;AAEHI,aAAK,EAAE,CAFJ;AAGHL,WAAG,EAAE,CAHF;AAIHE,iBAAS,EAAE,0BAJR;AAKHC,aAAK,EAAE,MALJ;AAMHC,cAAM,EAAEL;AANL,OAAP;;AASJ;AACI,aAAO,EAAP;AArCR;AAJJ;;AA6CA,IAAMQ,QAAQ,GAAoB,SAA5BA,QAA4B;MAC9BC;0BACAC;MAAAA,oCAAU,cAAVA,GAAUC;MACVC;MACAC;gCACAC;MAAAA,gDAAgB,IAAhBA,GAAgBC;+BAChBC;MAAAA,8CAAe,MAAfA,GAAeC;iCACfC;MAAAA,kDAAiB,GAAjBA,GAAiBC;yBACjBC;MAAAA,kCAAS,GAATA,GAASC;2BACTC;MAAAA,sCAAW,GAAXA,GAAWC;MACXC;uBACAxB;MAAAA,8BAAO,GAAPA,GAAOyB;MACPC;AAEA,MAAMC,QAAQ,GAAG,CAACC,IAAI,CAACC,MAALD,KAAgB,CAAjB,EAAoBE,QAApB,CAA6B,EAA7B,EAAiCC,SAAjC,CAA2C,CAA3C,CAAjB;AAEA,MAAMC,aAAa,GAAwB;AACvCC,mBAAe,OAAKjB,YADmB;AAEvCkB,WAAO,OAAKhB,cAF2B;AAGvCE,UAAM,EAAEA;AAH+B,GAA3C;;AAMA,MAAMe,YAAY;AACdf,UAAM,EAAEA,MAAM,GAAG,CADH;AAEdgB,sBAAkB,EAAKd,QAAL;AAFJ,KAGXxB,iBAAiB,CAAC0B,SAAD,EAAYxB,IAAZ,CAHN,EAIXa,KAJW,CAAlB;;AAOA,SACIwB;AAAKC,MAAE,EAAE,aAAaX,QAAtB;AAAgCD,aAAS,EAAC;AAA1C,KACIW;AACIE,QAAI,EAAC,UADT;AAEID,MAAE,EAAE,uBAAuBX,QAF/B;AAGID,aAAS,EAAC,oBAHd;AAIIc,YAAQ,EAAE9B,OAJd;AAKI+B,WAAO,EAAEhC;AALb,IADJ,EAQI4B;AACIK,QAAI,EAAC,YADT;AAEIJ,MAAE,EAAE,wBAAwBX,QAFhC;AAGId,SAAK,EAAEsB,YAHX;AAIIT,aAAS,EAAE,yBAAyBA;AAJxC,KAMKd,QANL,CARJ,EAgBKE,aAAa,IACVuB;AACIM,WAAO,EAAE,uBAAuBhB,QADpC;AAEIW,MAAE,EAAE,sBAAsBX,QAF9B;AAGID,aAAS,EAAC,mBAHd;AAIIb,SAAK,EAAEmB;AAJX,IAjBR,CADJ;AA7BJ","names":["getDirectionStyle","dir","size","top","left","transform","width","height","right","bottom","EZDrawer","open","onClose","_ref$onClose","children","style","enableOverlay","_ref$enableOverlay","overlayColor","_ref$overlayColor","overlayOpacity","_ref$overlayOpacity","zIndex","_ref$zIndex","duration","_ref$duration","direction","_ref$size","className","idSuffix","Math","random","toString","substring","overlayStyles","backgroundColor","opacity","drawerStyles","transitionDuration","React","id","type","onChange","checked","role","htmlFor"],"sources":["/Users/tsu/PartsOne-Application/login/node_modules/react-modern-drawer/src/index.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport './styles.scss'\r\n\r\ntype Props = {\r\n    open: boolean\r\n    onClose?: () => void\r\n    direction: 'left' | 'right' | 'top' | 'bottom'\r\n    children?: React.ReactNode\r\n    duration?: number\r\n    overlayOpacity?: number\r\n    overlayColor?: String\r\n    enableOverlay?: boolean\r\n    style?: React.CSSProperties\r\n    zIndex?: number\r\n    size?: number | string\r\n    className?: string | undefined\r\n}\r\n\r\nconst getDirectionStyle = (\r\n    dir: string,\r\n    size?: number | string,\r\n): {} | React.CSSProperties => {\r\n    switch (dir) {\r\n        case 'left':\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                transform: 'translate3d(-100%, 0, 0)',\r\n                width: size,\r\n                height: '100vh',\r\n            }\r\n        case 'right':\r\n            return {\r\n                top: 0,\r\n                right: 0,\r\n                transform: 'translate3d(100%, 0, 0)',\r\n                width: size,\r\n                height: '100vh',\r\n            }\r\n        case 'bottom':\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                transform: 'translate3d(0, 100%, 0)',\r\n                width: '100%',\r\n                height: size,\r\n            }\r\n        case 'top':\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                transform: 'translate3d(0, -100%, 0)',\r\n                width: '100%',\r\n                height: size,\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst EZDrawer: React.FC<Props> = function ({\r\n    open,\r\n    onClose = () => {},\r\n    children,\r\n    style,\r\n    enableOverlay = true,\r\n    overlayColor = '#000',\r\n    overlayOpacity = 0.4,\r\n    zIndex = 100,\r\n    duration = 500,\r\n    direction,\r\n    size = 250,\r\n    className,\r\n}): JSX.Element {\r\n    const idSuffix = (Math.random() + 1).toString(36).substring(7)\r\n\r\n    const overlayStyles: React.CSSProperties = {\r\n        backgroundColor: `${overlayColor}`,\r\n        opacity: `${overlayOpacity}`,\r\n        zIndex: zIndex,\r\n    }\r\n\r\n    const drawerStyles: React.CSSProperties = {\r\n        zIndex: zIndex + 1,\r\n        transitionDuration: `${duration}ms`,\r\n        ...getDirectionStyle(direction, size),\r\n        ...style,\r\n    }\r\n\r\n    return (\r\n        <div id={'EZDrawer' + idSuffix} className='EZDrawer'>\r\n            <input\r\n                type='checkbox'\r\n                id={'EZDrawer__checkbox' + idSuffix}\r\n                className='EZDrawer__checkbox'\r\n                onChange={onClose}\r\n                checked={open}\r\n            />\r\n            <nav\r\n                role='navigation'\r\n                id={'EZDrawer__container' + idSuffix}\r\n                style={drawerStyles}\r\n                className={'EZDrawer__container ' + className}\r\n            >\r\n                {children}\r\n            </nav>\r\n            {enableOverlay && (\r\n                <label\r\n                    htmlFor={'EZDrawer__checkbox' + idSuffix}\r\n                    id={'EZDrawer__overlay' + idSuffix}\r\n                    className='EZDrawer__overlay'\r\n                    style={overlayStyles}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EZDrawer\r\n"]},"metadata":{},"sourceType":"module"}